/**
 * @file tui.h
 * @author DeGus
 * 
 * @brief Класс TUI — консольный интерфейс игры в крестики-нолики.
 * 
 * @version 0.1
 * @date 2025-10-16
 * 
 * @details
 * Класс `tui` реализует консольный интерфейс игры в крестики-нолики
 * с использованием библиотеки ncurses.
 * Он управляет отображением игрового поля, обработкой ввода пользователя
 * и визуализацией состояния игры (ходы, победа, правила игры и т.д.).
 * 
 * Внутри содержит экземпляр класса [TicTacToe](@ref TicTacToe), 
 * отвечающего за игровую логику. Отрисовка символов выполняется
 * на основе словаря `symbols`, где каждому типу ячейки 
 * (`Cross`, `Zero`, `Empty`) соответствует свой символ.
 * 
 * Основной метод — [Run()](@ref tui::Run), который запускает игровой цикл.
 * 
 * ---
 * ### Основные возможности:
 * - Отрисовка игрового поля в консоли.
 * - Подсветка текущего игрока.
 * - Обработка перемещения курсора и выбора клетки.
 * - Отображение клавиш управления.
 * - Перезапуск, выход из игры.
 * - Вызов справки c информацией о самой игре "Крестики-нолики".
 * 
 * ---
 * @note
 * Для корректной работы требуется установленная библиотека **ncurses**.
 * 
 * @see TicTacToe
 */

#pragma once

#include <ncurses.h>
#include <map>
#include <string>

#include "../GameLogic/TicTacToe/tic_tac_toe.h"


/**
 * @class tui
 * @brief Класс, реализующий консольный интерфейс для игры в крестики-нолики.
 */
class tui{
private:
    /// @brief Словарь определяющий соответсвующие символы для Cross, Zero и Empty.
    std::map<TicTacToe::Cell, char> symbols = {
        {TicTacToe::Cell::Cross, 'X'},
        {TicTacToe::Cell::Zero, 'O'},
        {TicTacToe::Cell::Empty, '-'}
    };

    TicTacToe game;  ///< Экземпляр логики игры.
    int size;        ///< Размер игрового поля.
    int cursor_row;  ///< Текущая позиция курсора по строке.
    int cursor_col;  ///< Текущая позиция курсора по столбцу.

    /// Перезапуск игры (сброс состояния).
    void Restart();

    /// Отрисовка игрового поля.
    void  DrawBoard() const;
    
    void  DrawTitle  (int r, int c) const; ///< Отрисовка загаловка.
    short DrawPlayer (int r, int c) const; ///< Отрисовка текущего игрока или победителя.
    void  DrawMenu   (int r, int c) const; ///< Отрисовка подсказок управления.

    void DrawRule() const; ///< Отрисовка справки по самой игре "Крестики-нолики".

public:
    /**
     * @brief Конструктор интерфейса.
     * @param size Размер игрового поля (по умолчанию 3×3).
     */
    tui(int size=3);

    /// Деструктор — корректно завершает работу с ncurses.
    ~tui();


    /**
     * @brief Запускает основной цикл игры.
     * 
     * @details
     * Выполняет инициализацию ncurses, отрисовывает поле
     * и обрабатывает пользовательский ввод до завершения партии.
     */
    void Run();
    
};



